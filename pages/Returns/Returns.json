{
  "unpublishedPage": {
    "name": "Returns",
    "slug": "returns",
    "layouts": [
      {
        "viewMode": false,
        "dsl": {
          "widgetName": "MainContainer",
          "backgroundColor": "none",
          "rightColumn": 1224,
          "snapColumns": 64,
          "detachFromLayout": true,
          "widgetId": "0",
          "topRow": 0,
          "bottomRow": 1100,
          "containerStyle": "none",
          "snapRows": 99,
          "parentRowSpace": 1,
          "type": "CANVAS_WIDGET",
          "canExtend": true,
          "version": 89,
          "minHeight": 1010,
          "parentColumnSpace": 1,
          "dynamicBindingPathList": [],
          "leftColumn": 0
        },
        "layoutOnLoadActions": [
          [
            {
              "id": "Returns_getReturns",
              "name": "getReturns",
              "confirmBeforeExecute": false,
              "pluginType": "DB",
              "jsonPathKeys": [
                "tbl_returns.pageSize",
                "(tbl_returns.pageNo - 1) * tbl_returns.pageSize"
              ],
              "timeoutInMillisecond": 10000
            }
          ],
          [
            {
              "id": "Returns_utils.getReturns",
              "name": "utils.getReturns",
              "collectionId": "Returns_utils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "tbl_returns.pageSize",
                "SELECT returns.*, order_line.product_variant_id, order_line.quantity, product_variant.product_id AS main_product, product_variant.price AS price, product.name, product.type AS category, location.label AS warehouse\nFROM returns\nINNER JOIN order_line ON returns.product_id = order_line.id\nINNER JOIN product_variant ON order_line.product_variant_id = product_variant.id\nINNER JOIN product ON product_variant.product_id = product.id\nLEFT JOIN location ON returns.warehouse_id = location.id\nORDER BY id ASC\nLIMIT {{tbl_returns.pageSize}} OFFSET {{(tbl_returns.pageNo - 1) * tbl_returns.pageSize}};\n",
                "(tbl_returns.pageNo - 1) * tbl_returns.pageSize"
              ],
              "timeoutInMillisecond": 10000
            },
            {
              "id": "Returns_utils.getWarehouses",
              "name": "utils.getWarehouses",
              "collectionId": "Returns_utils",
              "confirmBeforeExecute": false,
              "pluginType": "JS",
              "jsonPathKeys": [
                "async () => {\n  const returns = await getReturns.run();\n  const warehouses = returns.map(p => {\n    return {\n      id: p.warehouse_id,\n      name: p.warehouse\n    };\n  });\n  const sanitisedWarehouses = warehouses.filter(warehouse => warehouse.name !== null && warehouse.name.trim() !== \"\");\n  if (!returns || returns.length < 1) {\n    return [{\n      id: 1,\n      name: 'Jamison Yard'\n    }, {\n      id: 2,\n      name: 'Brit Avenue'\n    }];\n  }\n  const uniqueWarehousesRaw = {};\n  for (let i = 0; i < sanitisedWarehouses.length; i++) {\n    uniqueWarehousesRaw[sanitisedWarehouses[i].name] = {\n      id: sanitisedWarehouses[i].id\n    };\n  }\n  const uniqueWarehouses = Object.keys(uniqueWarehousesRaw);\n  return uniqueWarehouses.map(category => {\n    return {\n      id: uniqueWarehousesRaw[category].id,\n      name: category\n    };\n  });\n}"
              ],
              "timeoutInMillisecond": 10000
            }
          ]
        ],
        "layoutOnLoadActionErrors": [],
        "validOnPageLoadActions": true,
        "id": "Returns",
        "deleted": false,
        "policies": [],
        "userPermissions": []
      }
    ],
    "userPermissions": [],
    "policies": [],
    "isHidden": false
  },
  "deleted": false,
  "gitSyncId": "65f0309f6015150d4decbba4_65f138eb6015150d4decbc23"
}